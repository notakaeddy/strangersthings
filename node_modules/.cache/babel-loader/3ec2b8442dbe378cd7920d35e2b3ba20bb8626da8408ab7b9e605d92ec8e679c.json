{"ast":null,"code":"export const createNewPost = async newPost => {\n  const url = \"https://strangers-things.herokuapp.com/api/2302-ACC-ET-WEB-PT-D/posts\";\n  const token = localStorage.getItem(\"token\");\n  const res = await fetch(url, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n      Authorization: `Bearer ${token}`\n    },\n    body: JSON.stringify({\n      post: {\n        title: newPost.title,\n        description: newPost.description,\n        price: newPost.price,\n        willDeliver: newPost.willDeliver\n      }\n    })\n  }).then(res => res.json()).then(result => {\n    console.log(result);\n  }).catch(console.error);\n};\nexport const getPosts = async () => {\n  const url = \"https://strangers-things.herokuapp.com/api/2302-ACC-ET-WEB-PT-D/posts\";\n  const token = localStorage.getItem(\"token\");\n  const response = await fetch(url, {\n    method: \"GET\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n      Authorization: `Bearer ${token}`\n    }\n  });\n  const json = await response.json();\n  return json;\n};\nexport const updatePost = async (postToUpdate, postId) => {\n  const url = `https://strangers-things.herokuapp.com/api/2302-ACC-ET-WEB-PT-D/posts/${postId}`;\n  const token = localStorage.getItem(\"token\");\n  const response = await fetch(url, {\n    method: \"PATCH\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n      Authorization: `Bearer ${token}`\n    },\n    body: JSON.stringify(postToUpdate)\n  });\n  const json = await response.json();\n  return json;\n};\nexport const deletePost = async postId => {\n  const url = `https://strangers-things.herokuapp.com/api/2302-ACC-ET-WEB-PT-D/posts/${postId}`;\n  const token = localStorage.getItem(\"token\");\n  const response = await fetch(url, {\n    method: \"DELETE\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n      Authorization: `Bearer ${token}`\n    }\n  });\n  const json = await response.json();\n  return json;\n};\nexport const accountCreation = async (username, password) => {\n  await fetch(\"https://strangers-things.herokuapp.com/api/2302-ACC-ET-WEB-PT-D/users/register\", {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify({\n      user: {\n        username: username,\n        password: password\n      }\n    })\n  }).then(response => response.json()).then(result => {\n    console.log(result);\n    localStorage.setItem(\"token\", result.data.token);\n  }).catch(console.error);\n};\nexport const accountLogin = async (username, password) => {\n  await fetch(\"https://strangers-things.herokuapp.com/api/2302-ACC-ET-WEB-PT-D/users/login\", {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify({\n      user: {\n        username: username,\n        password: password\n      }\n    })\n  }).then(response => response.json()).then(result => {\n    localStorage.setItem(\"token\", result.data.token);\n    console.log(result);\n  }).catch(console.error);\n};\nexport const testAuthentication = async () => {\n  const url = \"https://strangers-things.herokuapp.com/api/2302-ACC-ET-WEB-PT-D/test/me\";\n  const token = localStorage.getItem(\"token\");\n  const response = await fetch(url, {\n    method: \"GET\",\n    headers: {\n      Authorization: `Bearer ${token}`\n    }\n  });\n  const json = await response.json();\n  return json.success;\n};","map":{"version":3,"names":["createNewPost","newPost","url","token","localStorage","getItem","res","fetch","method","headers","Authorization","body","JSON","stringify","post","title","description","price","willDeliver","then","json","result","console","log","catch","error","getPosts","response","updatePost","postToUpdate","postId","deletePost","accountCreation","username","password","user","setItem","data","accountLogin","testAuthentication","success"],"sources":["/Users/edgar_main/Documents/StrangersThings/src/API/index.js"],"sourcesContent":["\nexport const createNewPost = async (newPost) =>\n{\n  const url =\"https://strangers-things.herokuapp.com/api/2302-ACC-ET-WEB-PT-D/posts\";\n  const token = localStorage.getItem(\"token\");\n  const res = await fetch(url, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n      Authorization: `Bearer ${token}`,\n    },\n    body: JSON.stringify({\n      post: {\n        title: newPost.title,\n        description: newPost.description,\n        price: newPost.price,\n        willDeliver: newPost.willDeliver,\n      },\n    }),\n  })\n  .then((res) => res.json())\n  .then((result) => {\n    console.log(result);\n  })\n  .catch(console.error);\n};\n\nexport const getPosts = async () =>\n{\n  const url = \"https://strangers-things.herokuapp.com/api/2302-ACC-ET-WEB-PT-D/posts\";\n  const token = localStorage.getItem(\"token\");\n  const response = await fetch(url, {\n    method: \"GET\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n      Authorization: `Bearer ${token}`,\n    },\n  });\n  const json = await response.json();\n  return json;\n};\n\n\nexport const updatePost = async (postToUpdate, postId) => {\n  const url = `https://strangers-things.herokuapp.com/api/2302-ACC-ET-WEB-PT-D/posts/${postId}`;\n  const token = localStorage.getItem(\"token\");\n  const response = await fetch(url, {\n    method: \"PATCH\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n      Authorization: `Bearer ${token}`,\n    },\n    body: JSON.stringify(postToUpdate),\n  });\n\n  const json = await response.json();\n  return json;\n};\n\nexport const deletePost = async (postId) =>\n{\n  const url = `https://strangers-things.herokuapp.com/api/2302-ACC-ET-WEB-PT-D/posts/${postId}`;\n  const token = localStorage.getItem(\"token\");\n  const response = await fetch(url, {\n    method: \"DELETE\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n      Authorization: `Bearer ${token}`,\n    },\n  });\n\n  const json = await response.json();\n  return json;\n};\n\nexport const accountCreation = async (username, password) =>\n{\n  await fetch(\"https://strangers-things.herokuapp.com/api/2302-ACC-ET-WEB-PT-D/users/register\",\n    {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        user: {\n          username: username,\n          password: password,\n        },\n      }),\n    }\n  )\n    .then((response) => response.json())\n    .then((result) => {\n      console.log(result);\n      localStorage.setItem(\"token\", result.data.token);\n    })\n    .catch(console.error);\n};\n\nexport const accountLogin = async (username, password) =>\n{\n  await fetch(\n    \"https://strangers-things.herokuapp.com/api/2302-ACC-ET-WEB-PT-D/users/login\",\n    {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        user: {\n          username: username,\n          password: password,\n        },\n      }),\n    }\n  )\n    .then((response) => response.json())\n    .then((result) => {\n      localStorage.setItem(\"token\", result.data.token);\n      console.log(result);\n    })\n    .catch(console.error);\n};\n\nexport const testAuthentication = async () => {\n  const url =\n    \"https://strangers-things.herokuapp.com/api/2302-ACC-ET-WEB-PT-D/test/me\";\n  const token = localStorage.getItem(\"token\");\n  const response = await fetch(url, {\n    method: \"GET\",\n    headers: {\n      Authorization: `Bearer ${token}`,\n    },\n  });\n  const json = await response.json();\n  return json.success;\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}